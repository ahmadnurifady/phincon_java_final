
spring.application.name=final_test_phincon

server.port=8080

#spring.data.r2dbc.repositories.enabled=true
spring.r2dbc.url=r2dbc:postgresql://localhost:5432/final_project_java_phincon
spring.r2dbc.username=training
spring.r2dbc.password=password

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=groupOrder
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*


spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
springdoc.swagger-ui.path=/swagger-ui
springdoc.api-docs.path=/api-docs























#spring:
#  data:
#    r2dbc:
#      repositories:
#        enabled: true
#      url: r2dbc:postgresql://localhost:5432/final_project_java_phincon
#      username: training
#      password: password
#
#  application:
#    name: final_test_phincon
#
#  kafka:
#    producer:
#      bootstrap-servers: localhost:9092
#      key-serializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#
#springdoc:
#  swagger-ui:
#    path: /swagger-ui
#  api-docs:
#    path: /api-docs
#
#server:
#  port: 8080